# -*- coding: utf-8 -*-
"""recommender.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_dLaC-ZnUMRNvpKkJ1Iv9BheaHuepH9S
"""

import pandas as pd
import os
try:
    df = pd.read_csv("netflix_titles.csv")  # ✅ For local
except:
    df = pd.read_csv(os.path.join(os.path.dirname(__file__), 'netflix_titles.csv'))  # ✅ For Streamlit
display(df.head())

import streamlit as st
st.write(df.head())

import matplotlib.pyplot as plt
import seaborn as sns

df['type'].value_counts().plot(kind='bar')
plt.title("Movies vs TV Shows")
plt.show()

df['year_added'] = pd.to_datetime(df['date_added'], errors='coerce').dt.year
sns.countplot(data=df, x='year_added', order=sorted(df['year_added'].dropna().unique()))
plt.title('Content Added Over Time')
plt.xlabel('Year Added')
plt.ylabel('Count')
plt.xticks(rotation=45)
plt.show()

from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.cluster import KMeans

df['features'] = df['listed_in'].fillna('') + " " + df['description'].fillna('')
tfidf = TfidfVectorizer(max_features=5000, stop_words='english')
X = tfidf.fit_transform(df['features'])

kmeans = KMeans(n_clusters=6)
df['cluster'] = kmeans.fit_predict(X)

from sklearn.metrics.pairwise import linear_kernel

cosine_sim = linear_kernel(X, X)
indices = pd.Series(df.index, index=df['title']).drop_duplicates()

def get_recommendations(title, top_n=5):
    idx = indices[title]
    sim_scores = list(enumerate(cosine_sim[idx]))
    sim_scores = sorted(sim_scores, key=lambda x: x[1], reverse=True)[1:top_n+1]
    movie_indices = [i[0] for i in sim_scores]
    return df['title'].iloc[movie_indices]

get_recommendations("Narcos")

import joblib
joblib.dump(tfidf, "tfidf.pkl")
joblib.dump(X, "tfidf_matrix.pkl")
df.to_csv("netflix_data_with_cluster.csv", index=False)

from google.colab import files
files.download("netflix_titles.csv")
files.download("tfidf.pkl")
files.download("tfidf_matrix.pkl")
